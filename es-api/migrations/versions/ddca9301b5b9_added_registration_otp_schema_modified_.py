"""Added Registration OTP Schema Modified User Schema

Revision ID: ddca9301b5b9
Revises: 8c2d2984bca0
Create Date: 2021-01-29 16:59:37.105547

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'ddca9301b5b9'
down_revision = '8c2d2984bca0'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_otp',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('otp', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='ES'
    )
    op.create_table('user_registration',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username'),
    schema='ES'
    )
    op.drop_table('user', schema='ES')
    op.drop_constraint('es_users_user_id_fkey', 'es_users', schema='ES', type_='foreignkey')
    op.create_foreign_key(None, 'es_users', 'user_registration', ['user_id'], ['id'], source_schema='ES', referent_schema='ES')
    op.create_foreign_key(None, 'patients', 'users', ['user_id'], ['id'], source_schema='ES', referent_schema='ES')
    op.create_foreign_key(None, 'providers', 'users', ['user_id'], ['id'], source_schema='ES', referent_schema='ES')
    op.add_column('users', sa.Column('created_at', sa.DateTime(), nullable=False), schema='ES')
    op.add_column('users', sa.Column('email', sa.String(length=100), nullable=False), schema='ES')
    op.add_column('users', sa.Column('first_name', sa.String(length=30), nullable=False), schema='ES')
    op.add_column('users', sa.Column('last_name', sa.String(length=30), nullable=False), schema='ES')
    op.add_column('users', sa.Column('phone_number', sa.String(length=12), nullable=False), schema='ES')
    op.add_column('users', sa.Column('registration_id', sa.Integer(), nullable=True), schema='ES')
    op.add_column('users', sa.Column('uuid', sa.String(length=50), nullable=False), schema='ES')
    op.drop_constraint('users_username_key', 'users', schema='ES', type_='unique')
    op.create_unique_constraint(None, 'users', ['uuid'], schema='ES')
    op.drop_constraint('users_scope_id_fkey', 'users', schema='ES', type_='foreignkey')
    op.drop_constraint('users_type_id_fkey', 'users', schema='ES', type_='foreignkey')
    op.drop_constraint('users_status_id_fkey', 'users', schema='ES', type_='foreignkey')
    op.create_foreign_key(None, 'users', 'user_registration', ['registration_id'], ['id'], source_schema='ES', referent_schema='ES')
    op.drop_column('users', 'status_id', schema='ES')
    op.drop_column('users', 'scope_id', schema='ES')
    op.drop_column('users', 'username', schema='ES')
    op.drop_column('users', 'password', schema='ES')
    op.drop_column('users', 'type_id', schema='ES')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('type_id', sa.INTEGER(), autoincrement=False, nullable=True), schema='ES')
    op.add_column('users', sa.Column('password', sa.VARCHAR(length=100), autoincrement=False, nullable=False), schema='ES')
    op.add_column('users', sa.Column('username', sa.VARCHAR(length=50), autoincrement=False, nullable=False), schema='ES')
    op.add_column('users', sa.Column('scope_id', sa.INTEGER(), autoincrement=False, nullable=True), schema='ES')
    op.add_column('users', sa.Column('status_id', sa.INTEGER(), autoincrement=False, nullable=True), schema='ES')
    op.drop_constraint(None, 'users', schema='ES', type_='foreignkey')
    op.create_foreign_key('users_status_id_fkey', 'users', 'status', ['status_id'], ['id'], source_schema='ES', referent_schema='ES')
    op.create_foreign_key('users_type_id_fkey', 'users', 'user_type', ['type_id'], ['id'], source_schema='ES', referent_schema='ES')
    op.create_foreign_key('users_scope_id_fkey', 'users', 'scope', ['scope_id'], ['id'], source_schema='ES', referent_schema='ES')
    op.drop_constraint(None, 'users', schema='ES', type_='unique')
    op.create_unique_constraint('users_username_key', 'users', ['username'], schema='ES')
    op.drop_column('users', 'uuid', schema='ES')
    op.drop_column('users', 'registration_id', schema='ES')
    op.drop_column('users', 'phone_number', schema='ES')
    op.drop_column('users', 'last_name', schema='ES')
    op.drop_column('users', 'first_name', schema='ES')
    op.drop_column('users', 'email', schema='ES')
    op.drop_column('users', 'created_at', schema='ES')
    op.drop_constraint(None, 'providers', schema='ES', type_='foreignkey')
    op.create_foreign_key('providers_user_id_fkey', 'providers', 'user', ['user_id'], ['id'], source_schema='ES', referent_schema='ES')
    op.drop_constraint(None, 'patients', schema='ES', type_='foreignkey')
    op.create_foreign_key('patients_user_id_fkey', 'patients', 'user', ['user_id'], ['id'], source_schema='ES', referent_schema='ES')
    op.drop_constraint(None, 'es_users', schema='ES', type_='foreignkey')
    op.create_foreign_key('es_users_user_id_fkey', 'es_users', 'users', ['user_id'], ['id'], source_schema='ES', referent_schema='ES')
    op.create_table('user',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"ES".user_id_seq\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('first_name', sa.VARCHAR(length=30), autoincrement=False, nullable=False),
    sa.Column('last_name', sa.VARCHAR(length=30), autoincrement=False, nullable=False),
    sa.Column('phone_number', sa.VARCHAR(length=12), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('uuid', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='user_pkey'),
    sa.UniqueConstraint('uuid', name='user_uuid_key'),
    schema='ES'
    )
    op.drop_table('user_registration', schema='ES')
    op.drop_table('user_otp', schema='ES')
    # ### end Alembic commands ###
